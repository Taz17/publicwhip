%ul.policies-list.list-unstyled
  - policies.each do |policy|
    %li
      = link_to policy, class: 'object-item panel-link row' do
        %article
          %h2.policy-title.object-heading.panel-link-title.col-md-7
            = capitalise_initial_character(policy.name_with_for)

          %p.policy-data.object-secondary
            %span
              = pluralize(policy.divisions.count, "division")
              - if policy.unedited_motions_count != 0
                %em= "(#{policy.unedited_motions_count} unedited)"
            %small.policy-edit-notice.text-muted
              edited #{time_ago_in_words(policy.last_edited_at)} ago
            %small.policy-subscriber-count.text-muted.hidden-md.hidden-lg
              = pluralize(policy.watches.count, "subscriber")

          %p.policy-subscriber-count.visible-md.visible-lg.col-md-7.text-muted.small
            = pluralize(policy.watches.count, "subscriber")

:javascript
  input = document.getElementById('policy-search');
  input.addEventListener('keyup', list_filter_search)

  function list_filter_search() {
    var input, filter, ul, li, a, i, txtValue;
    input = document.getElementById('policy-search');
    filter = input.value.toLowerCase();
    ul = document.querySelector(".policies-list.list-unstyled");
    li = ul.getElementsByTagName('li');

    for (i = 0; i < li.length; i++) {
      a = li[i].getElementsByTagName("a")[0];
      element = a.getElementsByClassName('policy-title object-heading panel-link-title col-md-7')
      text = element[0].innerText.trim()
      
      if (text.toLowerCase().includes(filter.trim())) {
        li[i].style.display = "";
      } else {
        li[i].style.display = "none";
      }
    }
  }
